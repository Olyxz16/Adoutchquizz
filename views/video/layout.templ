package video

import (
    "fmt"
    "time"
    "strconv"

    "Adoutchquizz/views"
)

type ClipData struct {
    VideoId int
    Order   int
    AnimeTitle string
    ClipInd int
    State   bool
}

func vals(clip ClipData) string {
    var okstr string
    // set the value as its opposite
    if clip.State {
        okstr = "false"
    } else {
        okstr = "true"
    }
    res := fmt.Sprintf(`{
        "videoID": %d,
        "clipOrder": %d,
        "ok": %s
        }`, clip.VideoId, clip.Order, okstr)
    return res
}

// DO HTMX REQUEST
templ StateCheckBox(clip ClipData) {
    if clip.State {
        <input type="checkbox" checked hx-post="/video/set" hx-swap="outerHTML" hx-target="this" hx-vals={ vals(clip) } />
    } else {
        <input type="checkbox" hx-post="/video/set" hx-swap="outerHTML" hx-target="this" hx-vals={ vals(clip) } />
    }
}
templ clip(clip ClipData) {
    <tr> 
        <th class="w-8 bold-gradient"> { strconv.Itoa(clip.Order) } </th>
        <th class="w-28 text-end"> { clip.AnimeTitle } </th>
        <th class="w-6"> { strconv.Itoa(clip.ClipInd) } </th>
        <th class="w-6"> @StateCheckBox(clip) </th>
    </tr>
}
templ column(title string, clips []ClipData) {
    <table class="flex flex-col">
        <caption class="text-5xl bold-gradient"> { title } </caption>
        <tbody class="mt-4">
            for _, c := range clips {
                @clip(c)
            }
        </tbody>
    </table>
}

templ videoDate(date *time.Time) {
    if date != nil {
        <p> { date.Format("01-02-2006") } </p>

    } else {
        <p> Pas encore sortie </p>
    }
}
templ Layout(ind int, date *time.Time, col1, col2, col3 []ClipData) {
    @views.Base() {
        <div class="pl-4 w-fit flex flex-row gap-16 items-baseline">
            <a class="text-8xl bold-gradient" href="/"> Video </a> 
            <h2 class="text-3xl bold-gradient"> nÂ°{ strconv.Itoa(ind) } </h2>
            <h2 class="text-3xl bold-gradient"> @videoDate(date) </h2>
        </div>
        <div class="relative top-[250px] flex flex-row justify-evenly items-stretch h-full text-white">
            @column("Opening", col1)
            @column("Ending", col2)
            @column("OST", col3)
        </div>
    } 
}
